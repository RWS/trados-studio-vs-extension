name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  StudioProductIdentifier: 18

jobs:

  build:
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: TemplatesVSIX/TemplatesVSIX.sln                     # Replace with your solution name, i.e. MyWpfApp.sln.      

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: set X86PATH
      run: echo "{X86PATH}={$ProgramFiles(x86)}" >> "$GITHUB_ENV"

    - name: validate X86PATH
      run: echo $X86PATH

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        source-url: ${{ vars.SDL_NUGET }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACT_PAT }} 

    - name: Download an artifact from an Azure Pipeline
      uses: git-for-windows/get-azure-pipelines-artifact@v0.3.1
      with:
        repository: sdl/TradosStudio
        definitionId: 1258
        artifact: binaries
        path: '$(X86PATH)\Trados\Trados Studio\Studio$(StudioProductIdentifier)'

    
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2
      

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=Release

    - name: build the application
      run: msbuild $env:Solution_Name /t:Build /p:Configuration=Release



